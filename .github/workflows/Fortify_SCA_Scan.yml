# workflow 名稱
name: Fortify SCA scan for WebGoat

# 什麼情況下觸發 workflow
on:
  # 對於 main branch 建立 Branch 與 Pull Request 時觸發 workflow 
  # push:
  #  branches: [ main ]
  # pull_request:
  #  branches: [ main ]

  # 允許你從 Action 頁簽上手動執行 workflow
  workflow_dispatch:

# Job 可以循序或平行執行
jobs:
  # 這個 workflow 只有一個 job，名稱為 "build"
  build:
    # 這個 job 會執行在作業系統為 ubuntu 的 runner
    #runs-on: ubuntu-latest
    runs-on: self-hosted

    # 作為 Job 的一部分，Steps 會循序執行一連串的動作
    steps:
      # 在 $GITHUB_WORKSPACE 下簽出您的存儲庫，以便您的工作可以訪問它
      - uses: actions/checkout@v2

      - name: 顯示 SCA 版本
        run: sourceanalyzer -version

      - name: 顯示 Rulepacks 版本
        run: fortifyupdate -showInstalledRules

      - name: 執行 Clean
        run: sourceanalyzer -b WebGoat -clean

      - name: 執行 Translation
      # 將 *.java 改成 *.*
        # run: sourceanalyzer -b WebGoat src/main/**/*.java -debug-verbose -logfile trans_java_21.log -jdk 21
        run: sourceanalyzer -b WebGoat src/main -debug-verbose -logfile trans.log -jdk 21

      - name: 執行 Scan
        run: sourceanalyzer -b WebGoat -scan -debug-verbose -logfile scan.log -f WebGoat.fpr 

      - name: 上傳至 SSC
        # 將 SSC URL 與 TOKEN 放到 SECRETS
        run: fortifyclient -url ${{ secrets.SSC_URL }} -authtoken ${{ secrets.SSC_TOKEN }} uploadFPR -file WebGoat.fpr -project WebGoat -version v1.0
